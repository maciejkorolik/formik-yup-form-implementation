{"version":3,"sources":["theme/GlobalStyle.js","theme/mainTheme.js","routes/index.js","validation/index.js","components/Header.js","templates/NewEventTemplate.js","components/FormPanel.js","theme/mixins.js","components/Input.js","components/Textarea.js","components/Select.js","components/Label.js","components/ErrorMark.js","components/Button.js","views/FormView.js","views/SuccessView.js","views/Root.js","index.js"],"names":["GlobalStyle","createGlobalStyle","theme","lightBlue","blue","darkBlue","orange","successText","successBackground","error","lightGray","darkGray","light","regular","semibold","bold","fontSize","xxs","xs","s","m","l","xl","routes","newEventSchema","Yup","shape","title","required","description","max","category_id","paid_event","default","event_fee","when","is","then","typeError","positive","reward","integer","ampm","oneOf","date","min","moment","format","time","test","value","isSameOrBefore","isSame","this","options","parent","isAfter","duration","coordinator_id","coordinator_email","email","StyledWrapper","styled","header","Bar","div","top","css","Heading","h1","Header","children","defaultProps","NewEventTemplate","FormHeader","h2","FormPanel","name","inputStyle","Input","input","width","RadioLabel","label","Textarea","textarea","Select","select","Label","ErrorMark","Button","button","secondary","FormView","state","userID","categories","currentUser","otherUsers","success","formatValues","values","newValues","Number","coordinator","id","String","removeNulls","obj","Object","entries","forEach","key","val","fetch","headers","Accept","res","json","data","setState","find","item","filter","to","initialValues","validationSchema","onSubmit","resetForm","formattedValues","console","log","errors","touched","handleChange","handleBlur","StyledForm","FormRow","type","onChange","onBlur","placeholder","component","SmallDescription","length","disabled","hidden","map","RadioGroup","defaultChecked","htmlFor","StyledSpan","lastname","user","Component","Form","span","SuccessPanel","SuccessView","goBack","handleClick","onClick","Root","exact","path","render","ReactDOM","document","getElementById"],"mappings":"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","file":"static/js/main.0d289037.chunk.js","sourcesContent":["import { createGlobalStyle } from 'styled-components';\n\nconst GlobalStyle = createGlobalStyle`\n  *, *::before, *::after {\n    box-sizing: border-box;\n    -webkit-font-smoothing: antialiased;\n    -moz-osx-font-smoothing: grayscale;\n    -moz-box-sizing: border-box;\n    -webkit-box-sizing: border-box;\n  }\n\n  html {\n    font-size: 62.5%;\n  }\n\n  body {\n    margin: 0;\n    padding: 0;\n    font-size: 1.6rem;\n    font-family: 'Open sans', sans-serif;\n    background-color: #F7F7F7;\n  }\n`;\n\nexport default GlobalStyle;\n","export const theme = {\n  lightBlue: '#8CA2C2',\n  blue: '#355990',\n  darkBlue: '#1E3B68',\n  orange: '#FF8E1D',\n  successText: '#80C684',\n  successBackground: '#F0FCF3',\n  error: '#FFB2B2',\n  lightGray: '#D1D1D1',\n  darkGray: '#767676',\n  light: 300,\n  regular: 400,\n  semibold: 600,\n  bold: 700,\n  fontSize: {\n    xxs: '1rem',\n    xs: '1.2rem',\n    s: '1.6rem',\n    m: '2rem',\n    l: '2.4rem',\n    xl: '4rem',\n  },\n};\n","export const routes = {\n  home: '/',\n  form: '/form',\n  success: '/success',\n};\n","/* eslint-disable func-names */\r\nimport * as Yup from 'yup';\r\nimport moment from 'moment';\r\n\r\nexport const newEventSchema = Yup.object().shape({\r\n  title: Yup.string().required('Title cannot be empty'),\r\n  description: Yup.string()\r\n    .max(140, 'Too long! (max 140 characters)')\r\n    .required('Description cannot be empty'),\r\n  category_id: Yup.number(),\r\n  paid_event: Yup.string().default('false'),\r\n  event_fee: Yup.number().when('paid_event', {\r\n    is: 'true',\r\n    then: Yup.number()\r\n      .required('Fee is required for paid events')\r\n      .typeError('Fee must be a number (dot separated)')\r\n      .positive('Fee must be a positive number'),\r\n  }),\r\n  reward: Yup.number()\r\n    .typeError('Reward must be a number')\r\n    .positive('Reward must be a positive number')\r\n    .integer('Reward must be an integer'),\r\n  ampm: Yup.string()\r\n    .oneOf(['am', 'pm'])\r\n    .default('am'),\r\n  date: Yup.date()\r\n    .required('Date is required')\r\n    .min(moment().format('YYYY-MM-DD'), 'Date cannot be before today'),\r\n  time: Yup.mixed()\r\n    .required('Time is required')\r\n    .test('maxTime', 'Time should be in 12h format', function(value) {\r\n      return moment(value, 'HH:mm').isSameOrBefore(moment('12:59', 'HH:mm'));\r\n    })\r\n    .when('date', {\r\n      is: date => date && moment(date).isSame(moment(), 'day'),\r\n      then: Yup.string().test('minTime', 'Time cannot be before now', function(value) {\r\n        const { ampm } = this.options.parent;\r\n        const submittedTime = moment(`${value} ${ampm}`, 'hh:mm a');\r\n        const check = submittedTime.isAfter(moment());\r\n        return check;\r\n      }),\r\n    }),\r\n  duration: Yup.number()\r\n    .typeError('Duration must be a number (dot separated)')\r\n    .positive('Duration must be a positive number'),\r\n  coordinator_id: Yup.number().required('Coordinator is required'),\r\n  coordinator_email: Yup.string().email('Wrong email format'),\r\n});\r\n","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport styled, { css } from 'styled-components';\r\n\r\nconst StyledWrapper = styled.header`\r\n  position: fixed;\r\n  top: 0;\r\n  left: 0;\r\n  width: 100%;\r\n  z-index: 9999;\r\n`;\r\n\r\nconst Bar = styled.div`\r\n  width: 100%;\r\n  height: 100px;\r\n  background: ${({ theme }) => theme.blue};\r\n  margin: 0;\r\n  display: flex;\r\n  align-items: center;\r\n  justify-content: center;\r\n  @media (max-width: 480px) {\r\n    height: 70px;\r\n  }\r\n  ${({ top }) =>\r\n    top &&\r\n    css`\r\n      height: 20px;\r\n      background-color: ${({ theme }) => theme.darkBlue};\r\n      @media (max-width: 480px) {\r\n        height: 10px;\r\n      }\r\n    `}\r\n`;\r\n\r\nconst Heading = styled.h1`\r\n  color: white;\r\n  width: 100%;\r\n  max-width: 1000px;\r\n  margin: 0 20px;\r\n  padding: 0 40px;\r\n  font-size: ${({ theme }) => theme.fontSize.xl};\r\n  font-weight: ${({ theme }) => theme.light};\r\n  @media (max-width: 480px) {\r\n    padding: 0;\r\n  }\r\n`;\r\n\r\nconst Header = ({ children }) => (\r\n  <StyledWrapper>\r\n    <Bar top />\r\n    <Bar>\r\n      <Heading>{children}</Heading>\r\n    </Bar>\r\n  </StyledWrapper>\r\n);\r\n\r\nHeader.propTypes = {\r\n  children: PropTypes.oneOfType([PropTypes.element, PropTypes.node]),\r\n};\r\n\r\nHeader.defaultProps = {\r\n  children: '',\r\n};\r\n\r\nexport default Header;\r\n","import React from 'react';\r\nimport styled from 'styled-components';\r\nimport PropTypes from 'prop-types';\r\nimport Header from '../components/Header';\r\n\r\nconst StyledWrapper = styled.div`\r\n  width: 100%;\r\n  margin: 120px auto 0 auto;\r\n  padding: 20px;\r\n  display: flex;\r\n  flex-direction: column;\r\n  align-items: center;\r\n  @media (max-width: 480px) {\r\n    padding: 10px;\r\n  }\r\n`;\r\n\r\nconst NewEventTemplate = ({ children }) => (\r\n  <>\r\n    <Header>New event</Header>\r\n    <StyledWrapper>{children}</StyledWrapper>\r\n  </>\r\n);\r\n\r\nNewEventTemplate.propTypes = {\r\n  children: PropTypes.oneOfType([PropTypes.element, PropTypes.node]).isRequired,\r\n};\r\n\r\nexport default NewEventTemplate;\r\n","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport styled from 'styled-components';\r\n\r\nconst StyledWrapper = styled.div`\r\n  width: 100%;\r\n  max-width: 1000px;\r\n  display: flex;\r\n  flex-direction: column;\r\n  align-items: stretch;\r\n  padding: 20px 40px;\r\n  margin: 0 auto 20px auto;\r\n  background-color: white;\r\n  border-radius: 5px;\r\n  box-shadow: 0px 0px 8px rgba(0, 0, 0, 0.1);\r\n  @media (max-width: 480px) {\r\n    padding: 15px;\r\n  }\r\n`;\r\n\r\nconst FormHeader = styled.h2`\r\n  width: 100%;\r\n  margin: 0 0 20px 0;\r\n  padding-bottom: 15px;\r\n  position: relative;\r\n  font-weight: ${({ theme }) => theme.regular};\r\n  font-size: ${({ theme }) => theme.fontSize.l};\r\n  color: ${({ theme }) => theme.blue};\r\n  text-transform: capitalize;\r\n\r\n  &::after {\r\n    content: '';\r\n    width: 100%;\r\n    height: 1px;\r\n    position: absolute;\r\n    bottom: 0;\r\n    left: 0;\r\n    background-color: ${({ theme }) => theme.lightBlue};\r\n  }\r\n`;\r\n\r\nconst FormPanel = ({ children, name }) => (\r\n  <StyledWrapper>\r\n    <FormHeader>{name}</FormHeader>\r\n    {children}\r\n  </StyledWrapper>\r\n);\r\n\r\nFormPanel.propTypes = {\r\n  children: PropTypes.oneOfType([PropTypes.element, PropTypes.node]).isRequired,\r\n  name: PropTypes.string.isRequired,\r\n};\r\n\r\nexport default FormPanel;\r\n","export const inputStyle = (theme, error) => {\r\n  return `\r\n    padding: 10px;\r\n    margin: 0;\r\n    font-size: ${theme.fontSize.s};\r\n    font-family: 'Open sans', sans-serif;\r\n    background-color: white;\r\n    border-radius: 4px;\r\n    border: 1px solid ${error ? theme.error : theme.lightGray};\r\n    outline: none;\r\n    color: ${theme.darkGray};\r\n\r\n    &:focus {\r\n      outline: none;\r\n      border: 1px solid ${error ? theme.error : theme.lightBlue};\r\n    }\r\n    &:invalid {\r\n      outline: none;\r\n      border: 1px solid ${theme.error};\r\n    }\r\n    &::placeholder {\r\n      color: ${theme.lightGray};\r\n    }\r\n`;\r\n};\r\n","import styled from 'styled-components';\r\nimport { inputStyle } from '../theme/mixins';\r\n\r\nconst Input = styled.input`\r\n  height: 40px;\r\n  width: ${({ width }) => width || '100%'};\r\n  ${({ theme, error }) => inputStyle(theme, error)};\r\n\r\n  &[type='date'] {\r\n    width: 140px;\r\n    color: ${({ theme, value }) => (value ? theme.darkGray : theme.lightGray)};\r\n    &::-webkit-clear-button {\r\n      display: none;\r\n    }\r\n    &::-webkit-inner-spin-button {\r\n      display: none;\r\n    }\r\n    &::-webkit-calendar-picker-indicator {\r\n      color: ${({ theme }) => theme.darkGray};\r\n      &:hover {\r\n        background: transparent;\r\n      }\r\n    }\r\n  }\r\n  &[type='time'] {\r\n    width: 100px;\r\n    margin-right: 10px;\r\n    color: ${({ theme, value }) => (value ? theme.darkGray : theme.lightGray)};\r\n    &::-webkit-clear-button {\r\n      display: none;\r\n    }\r\n    &::-webkit-datetime-edit-ampm-field {\r\n      display: none;\r\n    }\r\n  }\r\n  &[type='radio'] {\r\n    width: 18px;\r\n    height: 18px;\r\n    opacity: 0;\r\n    &:checked + label::before {\r\n      background: radial-gradient(\r\n        ${({ theme }) => theme.lightBlue},\r\n        ${({ theme }) => theme.lightBlue} 40%,\r\n        white 40%,\r\n        white 100%\r\n      );\r\n    }\r\n  }\r\n`;\r\n\r\nexport const RadioLabel = styled.label`\r\n  font-size: ${({ theme }) => theme.fontSize.s};\r\n  font-family: 'Open sans', sans-serif;\r\n  color: ${({ theme }) => theme.darkGray};\r\n  padding: 0 10px 0 5px;\r\n  position: relative;\r\n  &::before {\r\n    content: '';\r\n    width: 18px;\r\n    height: 18px;\r\n    position: absolute;\r\n    top: 3px;\r\n    left: -18px;\r\n    border-radius: 50%;\r\n    background: white;\r\n    border: 2px solid ${({ theme }) => theme.lightBlue};\r\n  }\r\n`;\r\n\r\nexport default Input;\r\n","import styled from 'styled-components';\r\nimport { inputStyle } from '../theme/mixins';\r\n\r\nconst Textarea = styled.textarea`\r\n  height: 150px;\r\n  width: 100%;\r\n  ${({ theme, error }) => inputStyle(theme, error)};\r\n  resize: none;\r\n`;\r\n\r\nexport default Textarea;\r\n","import styled from 'styled-components';\r\nimport { inputStyle } from '../theme/mixins';\r\n\r\nconst Select = styled.select`\r\n  height: 40px;\r\n  width: 100%;\r\n  ${({ theme, error }) => inputStyle(theme, error)};\r\n  padding: 5px;\r\n  color: ${({ theme, value }) => (value ? theme.darkGray : theme.lightGray)};\r\n  -moz-appearance: none;\r\n  -webkit-appearance: none;\r\n  appearance: none;\r\n  background-image: url('data:image/svg+xml;charset=US-ASCII,%3Csvg%20xmlns%3D%22http%3A%2F%2Fwww.w3.org%2F2000%2Fsvg%22%20width%3D%22292.4%22%20height%3D%22292.4%22%3E%3Cpath%20fill%3D%22%238CA2C2%22%20d%3D%22M287%2069.4a17.6%2017.6%200%200%200-13-5.4H18.4c-5%200-9.3%201.8-12.9%205.4A17.6%2017.6%200%200%200%200%2082.2c0%205%201.8%209.3%205.4%2012.9l128%20127.9c3.6%203.6%207.8%205.4%2012.8%205.4s9.2-1.8%2012.8-5.4L287%2095c3.5-3.5%205.4-7.8%205.4-12.8%200-5-1.9-9.2-5.5-12.8z%22%2F%3E%3C%2Fsvg%3E');\r\n  background-repeat: no-repeat;\r\n  background-position: right 12px top 50%, 0 0;\r\n  background-size: 12px auto;\r\n  &::-ms-expand {\r\n    display: none;\r\n  }\r\n  > option {\r\n    color: ${({ theme }) => theme.darkGray};\r\n  }\r\n`;\r\n\r\nexport default Select;\r\n","import styled, { css } from 'styled-components';\r\n\r\nconst Label = styled.label`\r\n  margin: 7px 0;\r\n  padding: 0;\r\n  font-size: ${({ theme }) => theme.fontSize.s};\r\n  font-family: 'Open sans', sans-serif;\r\n  font-weight: ${({ theme }) => theme.regular};\r\n  text-transform: uppercase;\r\n  color: ${({ theme, error }) => (error ? theme.error : theme.lightBlue)};\r\n\r\n  ${({ required }) =>\r\n    required &&\r\n    css`\r\n      &::after {\r\n        content: ' *';\r\n        color: ${({ theme }) => theme.error};\r\n      }\r\n    `}\r\n`;\r\n\r\nexport default Label;\r\n","import styled from 'styled-components';\r\n\r\nconst ErrorMark = styled.div`\r\n  height: auto;\r\n  min-height: 26px;\r\n  width: auto;\r\n  padding: 7px;\r\n  margin: 7px 0;\r\n  border-radius: 4px;\r\n  background-color: ${({ theme }) => theme.error};\r\n  color: white;\r\n  font-size: ${({ theme }) => theme.fontSize.xs};\r\n  line-height: 1.2;\r\n  justify-self: left;\r\n  position: relative;\r\n\r\n  @media (max-width: 768px) {\r\n    align-self: flex-start;\r\n  }\r\n\r\n  &::before {\r\n    position: absolute;\r\n    content: '';\r\n    width: 8px;\r\n    height: 8px;\r\n    top: 9px;\r\n    left: -4px;\r\n    transform-origin: center;\r\n    transform: rotate(45deg);\r\n    background-color: ${({ theme }) => theme.error};\r\n\r\n    @media (max-width: 768px) {\r\n      left: 15px;\r\n      top: -4px;\r\n    }\r\n  }\r\n`;\r\n\r\nexport default ErrorMark;\r\n","import styled from 'styled-components';\r\n\r\nconst Button = styled.button`\r\n  display: flex;\r\n  justify-content: center;\r\n  align-items: center;\r\n  color: white;\r\n  text-decoration: none;\r\n  padding: 0 20px;\r\n  width: auto;\r\n  min-width: 180px;\r\n  height: 50px;\r\n  border: none;\r\n  border-radius: 3px;\r\n  outline: none;\r\n  background-color: ${({ theme, secondary }) => (secondary ? theme.blue : theme.orange)};\r\n  color: white;\r\n  font-size: ${({ theme }) => theme.fontSize.s};\r\n  font-family: 'Open sans', sans-serif;\r\n  font-weight: ${({ theme }) => theme.regular};\r\n  text-transform: uppercase;\r\n  cursor: pointer;\r\n  transition: transform 0.2s ease;\r\n\r\n  &:focus {\r\n    outline: none;\r\n  }\r\n  &:hover {\r\n    transform: translateY(-2px);\r\n  }\r\n`;\r\n\r\nexport default Button;\r\n","/* eslint-disable no-console */\r\nimport React, { Component } from 'react';\r\nimport { Redirect } from 'react-router-dom';\r\nimport styled from 'styled-components';\r\nimport { Formik, Form, Field, ErrorMessage } from 'formik';\r\nimport moment from 'moment';\r\n\r\nimport { newEventSchema } from '../validation';\r\nimport NewEventTemplate from '../templates/NewEventTemplate';\r\nimport FormPanel from '../components/FormPanel';\r\nimport Input, { RadioLabel } from '../components/Input';\r\nimport Textarea from '../components/Textarea';\r\nimport Select from '../components/Select';\r\nimport Label from '../components/Label';\r\nimport ErrorMark from '../components/ErrorMark';\r\nimport Button from '../components/Button';\r\n\r\nclass FormView extends Component {\r\n  state = {\r\n    userID: 3,\r\n    categories: [],\r\n    currentUser: {},\r\n    otherUsers: [],\r\n    success: false,\r\n  };\r\n\r\n  componentDidMount() {\r\n    // fetch data from mocked json files\r\n    fetch('../data/categories.json', {\r\n      headers: {\r\n        'Content-Type': 'application/json',\r\n        Accept: 'application/json',\r\n      },\r\n    })\r\n      .then(res => res.json())\r\n      .then(data => {\r\n        this.setState({ categories: data });\r\n      });\r\n    fetch('../data/employees.json', {\r\n      headers: {\r\n        'Content-Type': 'application/json',\r\n        Accept: 'application/json',\r\n      },\r\n    })\r\n      .then(res => res.json())\r\n      .then(data => {\r\n        const { userID } = this.state;\r\n        this.setState({\r\n          currentUser: data.find(item => item.id === userID),\r\n          otherUsers: data.filter(item => item.id !== userID),\r\n        });\r\n      });\r\n  }\r\n\r\n  // function for formatting form values to the appropriate data structure:\r\n  formatValues = values => {\r\n    const time = moment(`${values.time} ${values.ampm}`, 'hh:mm a').format('HH:mm');\r\n    const date = moment(values.date).format('YYYY-MM-DD');\r\n    // appropriate data structure\r\n    const newValues = {\r\n      title: values.title,\r\n      description: values.description,\r\n      category_id: Number(values.category_id) || null, // Formik and Yup return number values as strings (even after successfull validation of type \"number\")\r\n      paid_event: values.paid_event === 'true',\r\n      event_fee: Number(values.event_fee) || null,\r\n      reward: Number(values.reward) || null,\r\n      date: `${date}T${time}`,\r\n      duration: values.duration * 360 || null,\r\n      coordinator: {\r\n        email: values.coordinator_email || null,\r\n        id: String(values.coordinator_id), // According to specification in the task description, coordinator id on the output should be a string\r\n      },\r\n    };\r\n    // function for removing properties with null value\r\n    const removeNulls = obj =>\r\n      Object.entries(obj).forEach(([key, val]) => {\r\n        if (val && typeof val === 'object') removeNulls(val);\r\n        // eslint-disable-next-line no-param-reassign\r\n        else if (val == null) delete obj[key];\r\n      });\r\n    // remove nulls and return formatted data\r\n    removeNulls(newValues);\r\n    return newValues;\r\n  };\r\n\r\n  render() {\r\n    const { userID, categories, currentUser, otherUsers, success } = this.state;\r\n\r\n    // show success view on successful submit of a form\r\n    if (success) return <Redirect to=\"/success\" />;\r\n    // else: render form\r\n    return (\r\n      <NewEventTemplate>\r\n        <Formik\r\n          initialValues={{\r\n            title: '',\r\n            description: '',\r\n            paid_event: 'false',\r\n            event_fee: '',\r\n            ampm: 'am',\r\n            time: '',\r\n            date: '',\r\n            coordinator_id: userID,\r\n          }}\r\n          validationSchema={newEventSchema}\r\n          onSubmit={(values, { resetForm }) => {\r\n            const formattedValues = this.formatValues(values);\r\n            console.log(formattedValues);\r\n            resetForm({});\r\n            this.setState({ success: true });\r\n          }}\r\n        >\r\n          {({ values, errors, touched, handleChange, handleBlur }) => (\r\n            <StyledForm>\r\n              <FormPanel name=\"About\">\r\n                <FormRow>\r\n                  <Label required error={errors.title && touched.title}>\r\n                    title\r\n                  </Label>\r\n                  <Input\r\n                    type=\"text\"\r\n                    name=\"title\"\r\n                    onChange={handleChange}\r\n                    onBlur={handleBlur}\r\n                    error={errors.title && touched.title}\r\n                    value={values.title || ''}\r\n                    placeholder=\"Make it short and clear\"\r\n                  />\r\n                  <ErrorMessage component={ErrorMark} name=\"title\" />\r\n                </FormRow>\r\n                <FormRow>\r\n                  <Label\r\n                    required\r\n                    error={\r\n                      (errors.description && values.description) ||\r\n                      (errors.description && touched.description)\r\n                    }\r\n                  >\r\n                    description\r\n                  </Label>\r\n                  <div>\r\n                    <Textarea\r\n                      name=\"description\"\r\n                      onChange={handleChange}\r\n                      onBlur={handleBlur}\r\n                      error={\r\n                        (errors.description && values.description) ||\r\n                        (errors.description && touched.description)\r\n                      }\r\n                      value={values.description || ''}\r\n                      placeholder=\"Write about your event, be creative\"\r\n                    />\r\n                    <SmallDescription error={String(values.description).length > 140}>\r\n                      <span>Max length: 140 characters</span>\r\n                      <span>{String(values.description).length}/140</span>\r\n                    </SmallDescription>\r\n                  </div>\r\n                  {(errors.description && values.description) ||\r\n                  (errors.description && touched.description) ? (\r\n                    <ErrorMark>{errors.description}</ErrorMark>\r\n                  ) : null}\r\n                </FormRow>\r\n                <FormRow>\r\n                  <Label>category</Label>\r\n                  <div>\r\n                    <Select\r\n                      name=\"category_id\"\r\n                      onChange={handleChange}\r\n                      onBlur={handleBlur}\r\n                      value={values.category_id || ''}\r\n                    >\r\n                      <option value=\"\" disabled hidden>\r\n                        Select category &#40;skills, interests, locations&#41;\r\n                      </option>\r\n                      {categories.map(item => (\r\n                        <option value={item.id} key={item.id}>\r\n                          {item.name}\r\n                        </option>\r\n                      ))}\r\n                    </Select>\r\n                    <SmallDescription>\r\n                      Describes topic and people who should be interested in this event\r\n                    </SmallDescription>\r\n                  </div>\r\n                  <ErrorMessage component={ErrorMark} name=\"category\" />\r\n                </FormRow>\r\n                <FormRow>\r\n                  <Label error={errors.event_fee && touched.event_fee}>payment</Label>\r\n                  <div>\r\n                    <Field\r\n                      component={RadioGroup}\r\n                      name=\"paid_event\"\r\n                      value={values.paid_event || 'false'}\r\n                    >\r\n                      <Input\r\n                        type=\"radio\"\r\n                        name=\"paid_event\"\r\n                        id=\"payment-free\"\r\n                        value=\"false\"\r\n                        onChange={handleChange}\r\n                        onBlur={handleBlur}\r\n                        defaultChecked\r\n                      />\r\n                      <RadioLabel htmlFor=\"payment-free\">Free event</RadioLabel>\r\n                      <Input\r\n                        type=\"radio\"\r\n                        name=\"paid_event\"\r\n                        id=\"payment-paid\"\r\n                        value=\"true\"\r\n                        onChange={handleChange}\r\n                        onBlur={handleBlur}\r\n                      />\r\n                      <RadioLabel htmlFor=\"payment-paid\">Paid Event</RadioLabel>\r\n                    </Field>\r\n                    {values.paid_event === 'true' ? (\r\n                      <>\r\n                        <Input\r\n                          type=\"text\"\r\n                          width=\"70px\"\r\n                          placeholder=\"Fee\"\r\n                          name=\"event_fee\"\r\n                          error={errors.event_fee && touched.event_fee}\r\n                          onChange={handleChange}\r\n                          onBlur={handleBlur}\r\n                          value={values.event_fee || ''}\r\n                        />\r\n                        <StyledSpan>$</StyledSpan>\r\n                      </>\r\n                    ) : null}\r\n                  </div>\r\n                  <ErrorMessage component={ErrorMark} name=\"event_fee\" />\r\n                </FormRow>\r\n                <FormRow>\r\n                  <Label error={errors.reward && touched.reward}>reward</Label>\r\n                  <div>\r\n                    <Input\r\n                      type=\"text\"\r\n                      width=\"90px\"\r\n                      placeholder=\"Number\"\r\n                      name=\"reward\"\r\n                      error={errors.reward && touched.reward}\r\n                      onChange={handleChange}\r\n                      onBlur={handleBlur}\r\n                      value={values.reward || ''}\r\n                    />\r\n                    <StyledSpan>reward points for attendance</StyledSpan>\r\n                  </div>\r\n                  <ErrorMessage component={ErrorMark} name=\"reward\" />\r\n                </FormRow>\r\n              </FormPanel>\r\n\r\n              <FormPanel name=\"Coordinator\">\r\n                <FormRow>\r\n                  <Label required error={errors.coordinator_id && touched.coordinator_id}>\r\n                    responsible\r\n                  </Label>\r\n                  <Select\r\n                    name=\"coordinator_id\"\r\n                    onChange={handleChange}\r\n                    onBlur={handleBlur}\r\n                    value={values.coordinator_id || userID}\r\n                    error={errors.coordinator_id && touched.coordinator_id}\r\n                  >\r\n                    <optgroup label=\"Me\">\r\n                      <option\r\n                        value={userID}\r\n                        key={userID}\r\n                      >{`${currentUser.name} ${currentUser.lastname}`}</option>\r\n                    </optgroup>\r\n                    <optgroup label=\"Others\">\r\n                      {otherUsers.map(user => (\r\n                        <option\r\n                          value={user.id}\r\n                          key={user.id}\r\n                        >{`${user.name} ${user.lastname}`}</option>\r\n                      ))}\r\n                    </optgroup>\r\n                  </Select>\r\n                  <ErrorMessage component={ErrorMark} name=\"coordinator_id\" />\r\n                </FormRow>\r\n                <FormRow>\r\n                  <Label error={errors.coordinator_email && touched.coordinator_email}>email</Label>\r\n                  <Input\r\n                    type=\"text\"\r\n                    placeholder=\"Email\"\r\n                    name=\"coordinator_email\"\r\n                    error={errors.coordinator_email && touched.coordinator_email}\r\n                    onChange={handleChange}\r\n                    onBlur={handleBlur}\r\n                    value={values.coordinator_email || ''}\r\n                  />\r\n                  <ErrorMessage component={ErrorMark} name=\"coordinator_email\" />\r\n                </FormRow>\r\n              </FormPanel>\r\n\r\n              <FormPanel name=\"When\">\r\n                <FormRow>\r\n                  <Label\r\n                    required\r\n                    error={(errors.date && touched.date) || (errors.time && touched.time)}\r\n                  >\r\n                    starts on\r\n                  </Label>\r\n                  <div>\r\n                    <Input\r\n                      type=\"date\"\r\n                      name=\"date\"\r\n                      min={moment().format('YYYY-MM-DD')}\r\n                      error={errors.date && touched.date}\r\n                      onChange={handleChange}\r\n                      onBlur={handleBlur}\r\n                      value={values.date || ''}\r\n                    />\r\n                    <StyledSpan>at</StyledSpan>\r\n                    <Input\r\n                      type=\"time\"\r\n                      name=\"time\"\r\n                      max=\"12:59\"\r\n                      error={errors.time && touched.time}\r\n                      onChange={handleChange}\r\n                      onBlur={handleBlur}\r\n                      value={values.time || ''}\r\n                    />\r\n                    <Field component={RadioGroup} name=\"ampm\" value={values.ampm || 'am'}>\r\n                      <Input\r\n                        type=\"radio\"\r\n                        name=\"ampm\"\r\n                        id=\"ampm-am\"\r\n                        value=\"am\"\r\n                        defaultChecked\r\n                        onChange={handleChange}\r\n                        onBlur={handleBlur}\r\n                      />\r\n                      <RadioLabel htmlFor=\"ampm-am\">AM</RadioLabel>\r\n                      <Input\r\n                        type=\"radio\"\r\n                        name=\"ampm\"\r\n                        value=\"pm\"\r\n                        id=\"ampm-pm\"\r\n                        onChange={handleChange}\r\n                        onBlur={handleBlur}\r\n                      />\r\n                      <RadioLabel htmlFor=\"ampm-pm\">PM</RadioLabel>\r\n                    </Field>\r\n                  </div>\r\n                  <div>\r\n                    <ErrorMessage component={ErrorMark} name=\"date\" />\r\n                    <ErrorMessage component={ErrorMark} name=\"time\" />\r\n                  </div>\r\n                </FormRow>\r\n                <FormRow>\r\n                  <Label error={errors.duration && touched.duration}>duration</Label>\r\n                  <div>\r\n                    <Input\r\n                      type=\"text\"\r\n                      width=\"90px\"\r\n                      placeholder=\"Number\"\r\n                      name=\"duration\"\r\n                      error={errors.duration && touched.duration}\r\n                      onChange={handleChange}\r\n                      onBlur={handleBlur}\r\n                      value={values.duration || ''}\r\n                    />\r\n                    <StyledSpan>hour</StyledSpan>\r\n                  </div>\r\n                  <ErrorMessage component={ErrorMark} name=\"duration\" />\r\n                </FormRow>\r\n              </FormPanel>\r\n              <Button type=\"submit\">publish event</Button>\r\n            </StyledForm>\r\n          )}\r\n        </Formik>\r\n      </NewEventTemplate>\r\n    );\r\n  }\r\n}\r\n\r\nexport default FormView;\r\n\r\n// styled components for form layout:\r\nconst StyledForm = styled(Form)`\r\n  width: 100%;\r\n  height: auto;\r\n  margin: 0;\r\n  padding: 0;\r\n  display: flex;\r\n  flex-direction: column;\r\n  align-items: center;\r\n`;\r\n\r\nconst FormRow = styled.div`\r\n  display: grid;\r\n  grid-template-columns: 1fr 3fr 1fr;\r\n  align-items: start;\r\n  grid-gap: 10px;\r\n  margin: 5px 0;\r\n  min-height: 40px;\r\n  @media (max-width: 768px) {\r\n    display: flex;\r\n    flex-direction: column;\r\n    align-items: stretch;\r\n  }\r\n`;\r\nconst SmallDescription = styled.div`\r\n  display: flex;\r\n  width: 100%;\r\n  padding: 3px 0;\r\n  justify-content: space-between;\r\n  font-size: ${({ theme }) => theme.fontSize.xs};\r\n  font-family: 'Open sans', sans-serif;\r\n  font-weight: ${({ theme }) => theme.regular};\r\n  font-style: italic;\r\n  color: ${({ theme, error }) => (error ? theme.error : theme.lightGray)};\r\n`;\r\n\r\nconst StyledSpan = styled.span`\r\n  font-size: ${({ theme }) => theme.fontSize.s};\r\n  font-family: 'Open sans', sans-serif;\r\n  color: ${({ theme }) => theme.darkGray};\r\n  line-height: 1.7;\r\n  padding: 0 10px;\r\n`;\r\n\r\nconst RadioGroup = styled.div`\r\n  display: inline-flex;\r\n  min-height: 50px;\r\n  flex-direction: row;\r\n  align-items: center;\r\n`;\r\n","import React, { Component } from 'react';\r\nimport { Redirect } from 'react-router-dom';\r\nimport styled from 'styled-components';\r\n\r\nimport NewEventTemplate from '../templates/NewEventTemplate';\r\nimport Button from '../components/Button';\r\n\r\nconst SuccessPanel = styled.div`\r\n  width: 100%;\r\n  max-width: 1000px;\r\n  display: flex;\r\n  flex-direction: column;\r\n  padding: 20px 40px;\r\n  margin: 0 auto 20px auto;\r\n  background-color: ${({ theme }) => theme.successBackground};\r\n  border-radius: 5px;\r\n  box-shadow: 0px 0px 7px rgba(0, 0, 0, 0.15);\r\n  h2 {\r\n    margin: 0 0 20px 0;\r\n    font-family: 'Open sans', sans-serif;\r\n    font-weight: ${({ theme }) => theme.regular};\r\n    font-size: ${({ theme }) => theme.fontSize.l};\r\n    color: ${({ theme }) => theme.successText};\r\n  }\r\n  p {\r\n    margin: 0;\r\n    font-family: 'Open sans', sans-serif;\r\n    font-weight: ${({ theme }) => theme.regular};\r\n    font-size: ${({ theme }) => theme.fontSize.s};\r\n    color: ${({ theme }) => theme.darkGray};\r\n  }\r\n  @media (max-width: 480px) {\r\n    padding: 20px;\r\n  }\r\n`;\r\n\r\nclass SuccessView extends Component {\r\n  state = {\r\n    goBack: false,\r\n  };\r\n\r\n  handleClick = () => {\r\n    this.setState({ goBack: true });\r\n  };\r\n\r\n  render() {\r\n    const { goBack } = this.state;\r\n\r\n    return goBack ? (\r\n      <Redirect to=\"/form\" />\r\n    ) : (\r\n      <NewEventTemplate>\r\n        <SuccessPanel>\r\n          <h2>Success</h2>\r\n          <p>Event has been created</p>\r\n        </SuccessPanel>\r\n        <Button secondary onClick={this.handleClick}>\r\n          Create another event\r\n        </Button>\r\n      </NewEventTemplate>\r\n    );\r\n  }\r\n}\r\n\r\nexport default SuccessView;\r\n","import React from 'react';\r\nimport { BrowserRouter, Switch, Route, Redirect } from 'react-router-dom';\r\nimport { ThemeProvider } from 'styled-components';\r\nimport 'typeface-open-sans';\r\n\r\nimport GlobalStyle from '../theme/GlobalStyle';\r\nimport { theme } from '../theme/mainTheme';\r\nimport { routes } from '../routes';\r\nimport FormView from './FormView';\r\nimport SuccessView from './SuccessView';\r\n\r\nconst Root = () => (\r\n  <BrowserRouter>\r\n    <GlobalStyle />\r\n    <ThemeProvider theme={theme}>\r\n      <Switch>\r\n        <Route exact path={routes.home} render={() => <Redirect to={routes.form} />} />\r\n        <Route exact path={routes.form} component={FormView} />\r\n        <Route exact path={routes.success} component={SuccessView} />\r\n      </Switch>\r\n    </ThemeProvider>\r\n  </BrowserRouter>\r\n);\r\n\r\nexport default Root;\r\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport Root from './views/Root';\n\nReactDOM.render(<Root />, document.getElementById('root'));\n"],"sourceRoot":""}